"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import common.fingerprint_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions
from acoustid.proto.common.fingerprint_pb2 import (
    Fingerprint as Fingerprint,
)

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class InsertFingerprintRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FINGERPRINT_FIELD_NUMBER: builtins.int
    @property
    def Fingerprint(self) -> common.fingerprint_pb2.Fingerprint: ...
    def __init__(
        self,
        *,
        Fingerprint: common.fingerprint_pb2.Fingerprint | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["Fingerprint", b"Fingerprint"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["Fingerprint", b"Fingerprint"]) -> None: ...

global___InsertFingerprintRequest = InsertFingerprintRequest

@typing_extensions.final
class InsertFingerprintResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.int
    def __init__(
        self,
        *,
        id: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id"]) -> None: ...

global___InsertFingerprintResponse = InsertFingerprintResponse

@typing_extensions.final
class UpdateFingerprintRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    FINGERPRINT_FIELD_NUMBER: builtins.int
    id: builtins.int
    @property
    def fingerprint(self) -> common.fingerprint_pb2.Fingerprint: ...
    def __init__(
        self,
        *,
        id: builtins.int = ...,
        fingerprint: common.fingerprint_pb2.Fingerprint | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["fingerprint", b"fingerprint"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["fingerprint", b"fingerprint", "id", b"id"]) -> None: ...

global___UpdateFingerprintRequest = UpdateFingerprintRequest

@typing_extensions.final
class UpdateFingerprintResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___UpdateFingerprintResponse = UpdateFingerprintResponse

@typing_extensions.final
class DeleteFingerprintRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.int
    def __init__(
        self,
        *,
        id: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id"]) -> None: ...

global___DeleteFingerprintRequest = DeleteFingerprintRequest

@typing_extensions.final
class DeleteFingerprintResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___DeleteFingerprintResponse = DeleteFingerprintResponse

@typing_extensions.final
class GetFingerprintRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.int
    def __init__(
        self,
        *,
        id: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id"]) -> None: ...

global___GetFingerprintRequest = GetFingerprintRequest

@typing_extensions.final
class GetFingerprintResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FINGERPRINT_FIELD_NUMBER: builtins.int
    @property
    def fingerprint(self) -> common.fingerprint_pb2.Fingerprint: ...
    def __init__(
        self,
        *,
        fingerprint: common.fingerprint_pb2.Fingerprint | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["fingerprint", b"fingerprint"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["fingerprint", b"fingerprint"]) -> None: ...

global___GetFingerprintResponse = GetFingerprintResponse

@typing_extensions.final
class CompareFingerprintRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FINGERPRINT_FIELD_NUMBER: builtins.int
    IDS_FIELD_NUMBER: builtins.int
    @property
    def fingerprint(self) -> common.fingerprint_pb2.Fingerprint: ...
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(
        self,
        *,
        fingerprint: common.fingerprint_pb2.Fingerprint | None = ...,
        ids: collections.abc.Iterable[builtins.int] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["fingerprint", b"fingerprint"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["fingerprint", b"fingerprint", "ids", b"ids"]) -> None: ...

global___CompareFingerprintRequest = CompareFingerprintRequest

@typing_extensions.final
class MatchingFingerprint(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    SIMILARITY_FIELD_NUMBER: builtins.int
    id: builtins.int
    similarity: builtins.float
    def __init__(
        self,
        *,
        id: builtins.int = ...,
        similarity: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "similarity", b"similarity"]) -> None: ...

global___MatchingFingerprint = MatchingFingerprint

@typing_extensions.final
class CompareFingerprintResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESULTS_FIELD_NUMBER: builtins.int
    @property
    def results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MatchingFingerprint]: ...
    def __init__(
        self,
        *,
        results: collections.abc.Iterable[global___MatchingFingerprint] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["results", b"results"]) -> None: ...

global___CompareFingerprintResponse = CompareFingerprintResponse

@typing_extensions.final
class SearchFingerprintRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FINGERPRINT_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    @property
    def fingerprint(self) -> common.fingerprint_pb2.Fingerprint: ...
    limit: builtins.int
    def __init__(
        self,
        *,
        fingerprint: common.fingerprint_pb2.Fingerprint | None = ...,
        limit: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["fingerprint", b"fingerprint"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["fingerprint", b"fingerprint", "limit", b"limit"]) -> None: ...

global___SearchFingerprintRequest = SearchFingerprintRequest

@typing_extensions.final
class SearchFingerprintResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESULTS_FIELD_NUMBER: builtins.int
    @property
    def results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MatchingFingerprint]: ...
    def __init__(
        self,
        *,
        results: collections.abc.Iterable[global___MatchingFingerprint] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["results", b"results"]) -> None: ...

global___SearchFingerprintResponse = SearchFingerprintResponse
